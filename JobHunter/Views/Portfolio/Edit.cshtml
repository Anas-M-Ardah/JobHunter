@model JobHunter.DTOs.PortfolioCreateEditDTO
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Edit Portfolio";
    Layout = "_Dashboard";
    var currentUser = await UserManager.GetUserAsync(User);
    var currentUserId = currentUser.Id;
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Edit Your Portfolio</h1>
        <div>
            <a asp-action="Details" asp-route-id="@Model.PortfolioId" class="btn btn-secondary btn-lg shadow-sm mr-2">
                <i class="fas fa-arrow-left fa-sm text-white-50 mr-2"></i>Cancel
            </a>
            <button type="submit" form="portfolioForm" class="d-none d-sm-inline-block btn btn-primary btn-lg shadow-sm">
                <i class="fas fa-save fa-sm text-white-50 mr-2"></i>Update Portfolio
            </button>
        </div>
    </div>

    <form id="portfolioForm" asp-action="Edit" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger shadow-sm" role="alert"></div>

        <!-- Personal Information Section -->
        <div class="card shadow mb-4 border-left-primary">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-user-circle mr-2"></i>Personal Information
                </h6>
            </div>
            <div class="card-body">
                <!-- Personal Details -->
                <div class="row">
                    <div class="col-lg-4 mb-3">
                        <div class="form-group">
                            <label asp-for="FirstName" class="small font-weight-bold text-gray-800">First Name</label>
                            <input asp-for="FirstName" class="form-control shadow-sm"
                                   placeholder="Enter your first name" required />
                            <span asp-validation-for="FirstName" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                    <div class="col-lg-4 mb-3">
                        <div class="form-group">
                            <label asp-for="SecondName" class="small font-weight-bold text-gray-800">Middle Name</label>
                            <input asp-for="SecondName" class="form-control shadow-sm"
                                   placeholder="Enter your middle name" />
                            <span asp-validation-for="SecondName" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                    <div class="col-lg-4 mb-3">
                        <div class="form-group">
                            <label asp-for="LastName" class="small font-weight-bold text-gray-800">Last Name</label>
                            <input asp-for="LastName" class="form-control shadow-sm"
                                   placeholder="Enter your last name" required />
                            <span asp-validation-for="LastName" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mb-3">
                        <div class="form-group">
                            <label asp-for="DateOfBirth" class="small font-weight-bold text-gray-800">Date of Birth</label>
                            <input asp-for="DateOfBirth" type="date" class="form-control shadow-sm" required />
                            <span asp-validation-for="DateOfBirth" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                    <div class="col-lg-6 mb-3">
                        <div class="form-group">
                            <label asp-for="Address" class="small font-weight-bold text-gray-800">Address</label>
                            <input asp-for="Address" class="form-control shadow-sm"
                                   placeholder="Enter your full address" required />
                            <span asp-validation-for="Address" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                </div>

                <!-- Contact Information -->
                <div class="row">
                    <div class="col-lg-6 mb-3">
                        <div class="form-group">
                            <label asp-for="Email" class="small font-weight-bold text-gray-800">Email Address</label>
                            <input asp-for="Email" type="email" class="form-control shadow-sm"
                                   placeholder="Enter your email address" required />
                            <span asp-validation-for="Email" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                    <div class="col-lg-6 mb-3">
                        <div class="form-group">
                            <label asp-for="PhoneNumber" class="small font-weight-bold text-gray-800">Phone Number</label>
                            <input asp-for="PhoneNumber" type="tel" class="form-control shadow-sm"
                                   placeholder="Enter your phone number" required />
                            <span asp-validation-for="PhoneNumber" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                </div>

                <!-- Professional Information -->
                <div class="row">
                    <div class="col-lg-6 mb-3">
                        <div class="form-group">
                            <label asp-for="Title" class="small font-weight-bold text-gray-800">Professional Title</label>
                            <input asp-for="Title" class="form-control shadow-sm"
                                   placeholder="e.g., Senior Software Engineer" required />
                            <span asp-validation-for="Title" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                    <div class="col-lg-6 mb-3">
                        <div class="form-group">
                            <label asp-for="Major" class="small font-weight-bold text-gray-800">Field of Expertise</label>
                            <input asp-for="Major" class="form-control shadow-sm"
                                   placeholder="e.g., Computer Science, Marketing" required />
                            <span asp-validation-for="Major" class="text-danger small d-block mt-1"></span>
                        </div>
                    </div>
                </div>

                <!-- Personal Image -->
                <div class="form-group mb-3">
                    <label asp-for="PersonalImage" class="small font-weight-bold text-gray-800">Profile Image</label>
                    @if (!string.IsNullOrEmpty(Model.PersonalImage))
                    {
                        <div class="mb-2">
                            <img src="@Model.PersonalImage" alt="Current profile image" class="img-thumbnail" style="max-width: 200px;">
                        </div>
                    }
                    <input asp-for="PersonalImage" type="url" class="form-control shadow-sm"
                           placeholder="https://example.com/your-image.jpg" />
                    <small class="form-text text-muted">Enter a valid image URL for your profile picture</small>
                    <span asp-validation-for="PersonalImage" class="text-danger small d-block mt-1"></span>
                </div>

                <!-- Professional Bio -->
                <div class="form-group">
                    <label asp-for="Bio" class="small font-weight-bold text-gray-800">Professional Bio</label>
                    <textarea asp-for="Bio" class="form-control shadow-sm" rows="4"
                              placeholder="Share your professional journey, key achievements, expertise, and what makes you unique in your field..."
                              maxlength="1000" oninput="updateCharCount(this)" required>@Model.Bio</textarea>
                    <span asp-validation-for="Bio" class="text-danger small d-block mt-1"></span>
                </div>
            </div>
        </div>

        <!-- Services Section -->
        <div class="card shadow mb-4 border-left-success">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-success">
                    <i class="fas fa-tools mr-2"></i>Services Offered
                </h6>
                <button type="button" id="add-service" class="btn btn-success btn-sm shadow-sm">
                    <i class="fas fa-plus mr-1"></i>Add Service
                </button>
            </div>
            <div class="card-body">
                <div id="services-container">
                    @if (Model.Services != null && Model.Services.Any())
                    {
                        @for (int i = 0; i < Model.Services.Count; i++)
                        {
                            <div class="service-item border rounded p-3 mb-3">
                                <input type="hidden" name="Services[@i].ServiceId" value="@Model.Services[i].ServiceId" />
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h6 class="text-primary mb-0">Service #@(i + 1)</h6>
                                    <button type="button" class="btn btn-danger btn-sm remove-service">
                                        <i class="fas fa-trash"></i> Remove
                                    </button>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Service Name <span class="text-danger">*</span></label>
                                            <input type="text" name="Services[@i].ServiceName" value="@Model.Services[i].ServiceName" 
                                                   class="form-control service-name-input"
                                                   placeholder="e.g., Web Development" required minlength="3" maxlength="100" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Service Image URL <span class="text-danger">*</span></label>
                                            <input type="url" name="Services[@i].ServiceImage" value="@Model.Services[i].ServiceImage" 
                                                   class="form-control"
                                                   placeholder="https://example.com/service-image.jpg" required />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Service Description <span class="text-danger">*</span></label>
                                    <textarea name="Services[@i].ServiceDescription" class="form-control service-description" rows="3"
                                              placeholder="Describe what this service includes, your expertise, and what clients can expect... (10-1000 characters)"
                                              required minlength="10" maxlength="1000">@Model.Services[i].ServiceDescription</textarea>
                                    <small class="form-text text-muted">Character count: <span class="char-count">@Model.Services[i].ServiceDescription?.Length</span>/1000</small>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <!-- Default service template if no services exist -->
                        <div class="service-item border rounded p-3 mb-3">
                            <input type="hidden" name="Services[0].ServiceId" value="@Guid.NewGuid()" />
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="text-primary mb-0">Service #1</h6>
                                <button type="button" class="btn btn-danger btn-sm remove-service">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Service Name <span class="text-danger">*</span></label>
                                        <input type="text" name="Services[0].ServiceName" class="form-control service-name-input"
                                               placeholder="e.g., Web Development" required minlength="3" maxlength="100" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Service Image URL <span class="text-danger">*</span></label>
                                        <input type="url" name="Services[0].ServiceImage" class="form-control"
                                               placeholder="https://example.com/service-image.jpg" required />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Service Description <span class="text-danger">*</span></label>
                                <textarea name="Services[0].ServiceDescription" class="form-control service-description" rows="3"
                                          placeholder="Describe what this service includes, your expertise, and what clients can expect... (10-1000 characters)"
                                          required minlength="10" maxlength="1000"></textarea>
                                <small class="form-text text-muted">Character count: <span class="char-count">0</span>/1000</small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Projects Section -->
        <div class="card shadow mb-4 border-left-info">
            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-info">
                    <i class="fas fa-project-diagram mr-2"></i>Projects
                </h6>
                <button type="button" id="add-project" class="btn btn-info btn-sm shadow-sm">
                    <i class="fas fa-plus mr-1"></i>Add Project
                </button>
            </div>
            <div class="card-body">
                <div id="projects-container">
                    @if (Model.Projects != null && Model.Projects.Any())
                    {
                        @for (int i = 0; i < Model.Projects.Count; i++)
                        {
                            <div class="project-item border rounded p-3 mb-3">
                                <input type="hidden" name="Projects[@i].ProjectId" value="@Model.Projects[i].ProjectId" />
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h6 class="text-primary mb-0">Project #@(i + 1)</h6>
                                    <button type="button" class="btn btn-danger btn-sm remove-project">
                                        <i class="fas fa-trash"></i> Remove
                                    </button>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Project Name <span class="text-danger">*</span></label>
                                            <input type="text" name="Projects[@i].ProjectName" value="@Model.Projects[i].ProjectName" 
                                                   class="form-control"
                                                   placeholder="e.g., E-commerce Website" required />
                                        </div>
                                    </div>
                                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Service Association <span class="text-danger">*</span></label>
                                            <select name="Projects[@i].ServiceId" class="form-control service-selector" required>
                                                <option value="">-- Select Service --</option>
                                                @if (Model.Services != null)
                                                {
                                                    @foreach (var service in Model.Services)
                                                    {

                                                        <option value="@service.ServiceId">
                                                            @service.ServiceName
                                                        </option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Project Link <span class="text-danger">*</span></label>
                                    <input type="url" name="Projects[@i].ProjectLink" value="@Model.Projects[i].ProjectLink" 
                                           class="form-control"
                                           placeholder="https://project-demo.com" required />
                                </div>
                                <div class="form-group">
                                    <label>Project Description <span class="text-danger">*</span></label>
                                    <textarea name="Projects[@i].ProjectDescription" class="form-control" rows="3"
                                              placeholder="Describe the project, technologies used, challenges solved, and your role..." 
                                              required>@Model.Projects[i].ProjectDescription</textarea>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Start Date <span class="text-danger">*</span></label>
                                            <input type="date" name="Projects[@i].StartDate" value="@Model.Projects[i].StartDate.ToString("yyyy-MM-dd")" 
                                                   class="form-control" required />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>End Date</label>
                                            <input type="date" name="Projects[@i].EndDate" value="@Model.Projects[i].EndDate?.ToString("yyyy-MM-dd")" 
                                                   class="form-control" />
                                            <small class="form-text text-muted">Leave empty if ongoing</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Project Attachments</label>
                                    <input type="file" name="Projects[@i].ProjectAttachments" class="form-control-file"
                                           accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.zip,.rar" multiple />
                                    <small class="form-text text-muted">Upload documentation, screenshots, or other relevant files (Max: 10MB)</small>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <!-- Default project template if no projects exist -->
                        <div class="project-item border rounded p-3 mb-3">
                            <input type="hidden" name="Projects[0].ProjectId" value="@Guid.NewGuid()" />
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6 class="text-primary mb-0">Project #1</h6>
                                <button type="button" class="btn btn-danger btn-sm remove-project">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Project Name <span class="text-danger">*</span></label>
                                        <input type="text" name="Projects[0].ProjectName" class="form-control"
                                               placeholder="e.g., E-commerce Website" required />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Service Association <span class="text-danger">*</span></label>
                                        <select name="Projects[0].ServiceId" class="form-control service-selector" required>
                                            <option value="">-- Select Service --</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Project Link <span class="text-danger">*</span></label>
                                <input type="url" name="Projects[0].ProjectLink" class="form-control"
                                       placeholder="https://project-demo.com" required />
                            </div>
                            <div class="form-group">
                                <label>Project Description <span class="text-danger">*</span></label>
                                <textarea name="Projects[0].ProjectDescription" class="form-control" rows="3"
                                          placeholder="Describe the project, technologies used, challenges solved, and your role..." required></textarea>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Start Date <span class="text-danger">*</span></label>
                                        <input type="date" name="Projects[0].StartDate" class="form-control" required />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>End Date</label>
                                        <input type="date" name="Projects[0].EndDate" class="form-control" />
                                        <small class="form-text text-muted">Leave empty if ongoing</small>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Project Attachments</label>
                                <input type="file" name="Projects[0].ProjectAttachments" class="form-control-file"
                                       accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.zip,.rar" multiple />
                                <small class="form-text text-muted">Upload documentation, screenshots, or other relevant files (Max: 10MB)</small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <input type="hidden" asp-for="EndUserId" value="@currentUserId" />
        <input type="hidden" asp-for="PortfolioId" />

        <!-- Submit Button (Mobile) -->
        <div class="d-sm-none mb-4">
            <button type="submit" class="btn btn-primary btn-block btn-lg shadow">
                <i class="fas fa-save fa-sm mr-2"></i>Update Portfolio
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // --- Services Management ---
            const servicesContainer = document.getElementById('services-container');
            const addServiceBtn = document.getElementById('add-service');

            function updateServiceNames() {
                const serviceItems = servicesContainer.querySelectorAll('.service-item');
                serviceItems.forEach((item, idx) => {
                    // Update the service number in the header
                    const header = item.querySelector('h6');
                    if (header) {
                        header.textContent = `Service #${idx + 1}`;
                    }
                    
                    item.querySelectorAll('input, textarea').forEach(input => {
                        if (input.name) {
                            input.name = input.name.replace(/Services$$\d+$$/, `Services[${idx}]`);
                        }
                        if (input.id) {
                            input.id = input.id.replace(/Services_\d+_/, `Services_${idx}_`);
                        }
                    });
                });
            }

            function getServiceTemplate(idx) {
                const newId = generateUUID();
                return `
                    <div class="service-item border rounded p-3 mb-3">
                        <input type="hidden" name="Services[${idx}].ServiceId" value="${newId}" />
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="text-primary mb-0">Service #${idx + 1}</h6>
                            <button type="button" class="btn btn-danger btn-sm remove-service">
                                <i class="fas fa-trash"></i> Remove
                            </button>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Service Name <span class="text-danger">*</span></label>
                                    <input type="text" name="Services[${idx}].ServiceName" class="form-control service-name-input"
                                        placeholder="e.g., Web Development" required minlength="3" maxlength="100" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Service Image URL <span class="text-danger">*</span></label>
                                    <input type="url" name="Services[${idx}].ServiceImage" class="form-control"
                                        placeholder="https://example.com/service-image.jpg" required />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Service Description <span class="text-danger">*</span></label>
                            <textarea name="Services[${idx}].ServiceDescription" class="form-control service-description" rows="3"
                                placeholder="Describe what this service includes, your expertise, and what clients can expect... (10-1000 characters)"
                                required minlength="10" maxlength="1000"></textarea>
                            <small class="form-text text-muted">Character count: <span class="char-count">0</span>/1000</small>
                        </div>
                    </div>
                `;
            }

            function generateUUID() {
                // Generate a UUID-like string
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }

            // Function to update service selectors in projects
            function updateServiceSelectors() {
                const serviceOptions = Array.from(document.querySelectorAll('.service-name-input'))
                    .map((input, index) => ({
                        id: input.closest('.service-item').querySelector('input[type="hidden"]').value,
                        name: input.value || `Service ${index + 1}`
                    }));

                document.querySelectorAll('.service-selector').forEach(selector => {
                    const currentValue = selector.value;
                    // Keep existing options for already saved services
                    const existingOptions = Array.from(selector.options).filter(opt => opt.value && serviceOptions.find(s => s.id === opt.value));
                    
                    selector.innerHTML = '<option value="">-- Select Service --</option>';
                    serviceOptions.forEach(service => {
                        const option = new Option(service.name, service.id);
                        selector.add(option);
                        if (service.id === currentValue) {
                            option.selected = true;
                        }
                    });
                });
            }

            // Service event listeners
            addServiceBtn.addEventListener('click', function () {
                const idx = servicesContainer.querySelectorAll('.service-item').length;
                servicesContainer.insertAdjacentHTML('beforeend', getServiceTemplate(idx));
                updateServiceNames();
                updateServiceSelectors();
            });

            servicesContainer.addEventListener('click', function (e) {
                if (e.target.closest('.remove-service')) {
                    const items = servicesContainer.querySelectorAll('.service-item');
                    if (items.length > 1) {
                        if (confirm('Are you sure you want to remove this service? All associated projects will need to be updated.')) {
                            e.target.closest('.service-item').remove();
                            updateServiceNames();
                            updateServiceSelectors();
                        }
                    } else {
                        alert('You must have at least one service.');
                    }
                }
            });

            servicesContainer.addEventListener('input', function (e) {
                if (e.target.classList.contains('service-name-input')) {
                    updateServiceSelectors();
                }
                if (e.target.classList.contains('service-description')) {
                    const counter = e.target.closest('.form-group').querySelector('.char-count');
                    if (counter) {
                        counter.textContent = e.target.value.length;
                    }
                }
            });

            // --- Projects Management ---
            const projectsContainer = document.getElementById('projects-container');
            const addProjectBtn = document.getElementById('add-project');

            function updateProjectNames() {
                const projectItems = projectsContainer.querySelectorAll('.project-item');
                projectItems.forEach((item, idx) => {
                    // Update the project number in the header
                    const header = item.querySelector('h6');
                    if (header) {
                        header.textContent = `Project #${idx + 1}`;
                    }
                    
                    item.querySelectorAll('input, textarea, select').forEach(input => {
                        if (input.name) {
                            input.name = input.name.replace(/Projects$$\d+$$/, `Projects[${idx}]`);
                        }
                        if (input.id) {
                            input.id = input.id.replace(/Projects_\d+_/, `Projects_${idx}_`);
                        }
                    });
                });
            }

            function getProjectTemplate(idx) {
                const newId = generateUUID();
                return `
                    <div class="project-item border rounded p-3 mb-3">
                        <input type="hidden" name="Projects[${idx}].ProjectId" value="${newId}" />
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="text-primary mb-0">Project #${idx + 1}</h6>
                            <button type="button" class="btn btn-danger btn-sm remove-project">
                                <i class="fas fa-trash"></i> Remove
                            </button>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Project Name <span class="text-danger">*</span></label>
                                    <input type="text" name="Projects[${idx}].ProjectName" class="form-control"
                                           placeholder="e.g., E-commerce Website" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Service Association <span class="text-danger">*</span></label>
                                    <select name="Projects[${idx}].ServiceId" class="form-control service-selector" required>
                                        <option value="">-- Select Service --</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Project Link <span class="text-danger">*</span></label>
                            <input type="url" name="Projects[${idx}].ProjectLink" class="form-control"
                                   placeholder="https://project-demo.com" required />
                        </div>

                        <div class="form-group">
                            <label>Project Description <span class="text-danger">*</span></label>
                            <textarea name="Projects[${idx}].ProjectDescription" class="form-control" rows="3"
                                      placeholder="Describe the project, technologies used, challenges solved, and your role..." required></textarea>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Start Date <span class="text-danger">*</span></label>
                                    <input type="date" name="Projects[${idx}].StartDate" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>End Date</label>
                                    <input type="date" name="Projects[${idx}].EndDate" class="form-control" />
                                    <small class="form-text text-muted">Leave empty if ongoing</small>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Project Attachments</label>
                            <input type="file" name="Projects[${idx}].ProjectAttachments" class="form-control-file"
                                   accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.zip,.rar" multiple />
                            <small class="form-text text-muted">Upload documentation, screenshots, or other relevant files (Max: 10MB)</small>
                        </div>
                    </div>
                `;
            }

            // Project event listeners
            addProjectBtn.addEventListener('click', function () {
                const idx = projectsContainer.querySelectorAll('.project-item').length;
                projectsContainer.insertAdjacentHTML('beforeend', getProjectTemplate(idx));
                updateProjectNames();
                updateServiceSelectors();
            });

            projectsContainer.addEventListener('click', function (e) {
                if (e.target.closest('.remove-project')) {
                    const items = projectsContainer.querySelectorAll('.project-item');
                    if (items.length > 1) {
                        if (confirm('Are you sure you want to remove this project?')) {
                            e.target.closest('.project-item').remove();
                            updateProjectNames();
                        }
                    } else {
                        alert('You must have at least one project.');
                    }
                }
            });

            // Form validation
            const form = document.getElementById('portfolioForm');
            form.addEventListener('submit', function (e) {
                // Validate that each project has a valid service selected
                const projectSelectors = document.querySelectorAll('.service-selector');
                let hasErrors = false;

                projectSelectors.forEach(selector => {
                    if (!selector.value) {
                        selector.classList.add('is-invalid');
                        hasErrors = true;
                    } else {
                        selector.classList.remove('is-invalid');
                    }
                });

                if (hasErrors) {
                    e.preventDefault();
                    alert('Please select a service for all projects.');
                    return false;
                }

                // Validate dates
                const projectItems = document.querySelectorAll('.project-item');
                projectItems.forEach(item => {
                    const startDate = item.querySelector('input[name*="StartDate"]').value;
                    const endDate = item.querySelector('input[name*="EndDate"]').value;

                    if (startDate && endDate && new Date(startDate) > new Date(endDate)) {
                        e.preventDefault();
                        alert('Project end date must be after start date.');
                        hasErrors = true;
                        return false;
                    }
                });

                if (!hasErrors) {
                    // Show loading state
                    const submitBtns = form.querySelectorAll('button[type="submit"]');
                    submitBtns.forEach(btn => {
                        btn.disabled = true;
                        btn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Updating...';
                    });
                }
            });

            // Initialize character counters for existing textareas
            document.querySelectorAll('.service-description').forEach(textarea => {
                const counter = textarea.closest('.form-group').querySelector('.char-count');
                if (counter) {
                    counter.textContent = textarea.value.length;
                }
            });

            // Initial setup
            updateServiceSelectors();
            updateServiceNames();
            updateProjectNames();
        });

        function updateCharCount(element) {
            const currentLength = element.value.length;
            const maxLength = element.getAttribute('maxlength') || 500;

            let countDisplay = element.parentElement.querySelector('.char-count');

            if (!countDisplay) {
                countDisplay = document.createElement('small');
                countDisplay.className = 'char-count form-text text-muted mt-1';
                element.parentElement.appendChild(countDisplay);
            }

            countDisplay.textContent = `${currentLength}/${maxLength} characters`;

            if (currentLength > maxLength * 0.9) {
                countDisplay.className = 'char-count form-text text-warning mt-1';
            } else if (currentLength >= maxLength) {
                countDisplay.className = 'char-count form-text text-danger mt-1';
            } else {
                countDisplay.className = 'char-count form-text text-muted mt-1';
            }

            if (currentLength > maxLength) {
                element.value = element.value.substring(0, maxLength);
                countDisplay.textContent = `${maxLength}/${maxLength} characters (limit reached)`;
            }
        }

        // Auto-save draft functionality
        let autoSaveTimer;
        const autoSaveInterval = 30000; // 30 seconds

        function autoSaveDraft() {
            clearTimeout(autoSaveTimer);
            autoSaveTimer = setTimeout(() => {
                const formData = new FormData(document.getElementById('portfolioForm'));

                // You can implement an AJAX call here to save draft
                console.log('Auto-saving draft...');

                // Show notification
                const notification = document.createElement('div');
                notification.className = 'alert alert-info alert-dismissible fade show position-fixed';
                notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999;';
                notification.innerHTML = `
                    <i class="fas fa-save mr-2"></i>Draft saved
                    <button type="button" class="close" data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                `;
                document.body.appendChild(notification);

                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }, autoSaveInterval);
        }

        // Enable auto-save on form changes
        document.getElementById('portfolioForm').addEventListener('input', autoSaveDraft);
        document.getElementById('portfolioForm').addEventListener('change', autoSaveDraft);
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}